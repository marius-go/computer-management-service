// Code generated by go-swagger; DO NOT EDIT.

package computer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/marius-go/computer-management-service/gen/controller/rest/models"
)

// ListComputersOKCode is the HTTP code returned for type ListComputersOK
const ListComputersOKCode int = 200

/*
ListComputersOK OK

swagger:response listComputersOK
*/
type ListComputersOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Computer `json:"body,omitempty"`
}

// NewListComputersOK creates ListComputersOK with default headers values
func NewListComputersOK() *ListComputersOK {

	return &ListComputersOK{}
}

// WithPayload adds the payload to the list computers o k response
func (o *ListComputersOK) WithPayload(payload []*models.Computer) *ListComputersOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list computers o k response
func (o *ListComputersOK) SetPayload(payload []*models.Computer) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListComputersOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Computer, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*
ListComputersDefault error

swagger:response listComputersDefault
*/
type ListComputersDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListComputersDefault creates ListComputersDefault with default headers values
func NewListComputersDefault(code int) *ListComputersDefault {
	if code <= 0 {
		code = 500
	}

	return &ListComputersDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the list computers default response
func (o *ListComputersDefault) WithStatusCode(code int) *ListComputersDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the list computers default response
func (o *ListComputersDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the list computers default response
func (o *ListComputersDefault) WithPayload(payload *models.Error) *ListComputersDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list computers default response
func (o *ListComputersDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListComputersDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
